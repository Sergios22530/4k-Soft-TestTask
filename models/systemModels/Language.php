<?php

namespace app\models\systemModels;

use app\helpers\Status;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "language".
 *
 * @property integer $id
 * @property string $name
 * @property string $prefix
 * @property string $local
 * @property integer $default
 * @property integer $status
 */
class Language extends \yii\db\ActiveRecord
{
    public static $languages = null;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'language';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'prefix', 'local'], 'required'],
            [['default', 'status'], 'integer'],
            [['name'], 'string', 'max' => 255],
            [['prefix', 'local'], 'string', 'max' => 12]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Назва',
            'prefix' => 'Prefix',
            'local' => 'Prefix local',
            'default' => 'По замовчуванню',
            'status' => 'Статус',
        ];
    }

    public function beforeSave($insert)
    {
        if ((integer)$this->default === Status::STATUS_ACTIVE) {
            self::updateAll(['default' => 0]);

        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function getAllLanguage()
    {
        if (self::$languages === null) {
            self::$languages = ArrayHelper::map(self::find()
                ->select(['local', 'name'])
                ->where(['status' => Status::STATUS_ACTIVE])
                ->orderBy(['default' => SORT_DESC])
                ->asArray()
                ->all(),
                'local', 'name');
        }
        return self::$languages;
    }

    /**
     * @param bool $getAll
     * @param array $selectedFields
     * @return array|\yii\db\ActiveRecord[]
     */
    public static function getLanguages($getAll = false, $selectedFields = [])
    {
        $languages = self::find()->orderBy(['default' => SORT_DESC])
            ->where(['status' => Status::STATUS_ACTIVE]);
        if (!empty($selectedFields)) {
            $languages->select(array_values($selectedFields));
        }
        if (!$getAll) $languages->andWhere(['<>', 'local', Yii::$app->language]);

        return $languages->asArray()->all();
    }


}
